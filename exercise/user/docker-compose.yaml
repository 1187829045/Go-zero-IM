version: "3"

services:
  # 服务名
  etcd:
    # 选择镜像：镜像的选择会先从本地找，如果没有会去仓库中拉取下来
    image: bitnami/etcd:latest
    # 可以选择指定的dockerfile自动帮我构建
    build:
      # 指定dockerfile所在的目录
      context: ./
      # 指定dockerfile的文件名
      dockerfile: Dockerfile_etcd
    # 定义创建的容器名
    container_name: etcd
    # 使创建的容器与宿主机绑定端口
    ports:
      - "2379:2379"
      - "2380:2380"
    # 配置系统环境变量
    environment:
      - ETCD_ENABLE_V2=true
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_NAME=etcd
    # 配置容器与宿主机的共享目录
    # 同时需要注意宿主机存在目录，并且要基于权限不然系统会直接报错
    volumes:
      - ./etcd/data:/bitnami/etcd/data
      - ./etcd/logs:/bitnami/etcd/logs
    # 设置容器的网络段
    networks:
      user:
        ipv4_address: 168.10.0.20

  user-rpc:
    image: registry.cn-hangzhou.aliyuncs.com/llb-llb-easy-chat/user-rpc-dev:latest
    container_name: user-rpc
    ports:
      - "8080:8080"
    # 与etcd服务互通
    links:
      - etcd
    # 需要等指定容器启动后才可以启动,填写的是容器的服务名
    depends_on:
      - etcd
    networks:
      user:

  user-api:
    image: registry.cn-hangzhou.aliyuncs.com/llb-llb-easy-chat/user-api-dev:latest
    container_name: user-api
    ports:
      - "8888:8888"
    # 与etcd服务互通
    links:
      - etcd
    # 需要等指定容器启动后才可以启动,填写的是容器的服务名
    depends_on:
      - etcd
      - user-rpc
    networks:
      user:

# 由docker创建
networks:
  user:
    external:
      name: user
